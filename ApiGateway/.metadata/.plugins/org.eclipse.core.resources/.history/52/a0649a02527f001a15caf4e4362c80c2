package com.pravin.filter;

import javax.security.sasl.AuthenticationException;
import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import com.netflix.zuul.ZuulFilter;
import com.netflix.zuul.context.RequestContext;
import com.pravin.util.ErrorHandler;

@Component
public class RoutingFilter extends ZuulFilter {
	@Value("${jwt.header}")
	private String headerName;

	@Override
	public String filterType() {
		return "pre";
	}

	@Override
	public int filterOrder() {
		return 1;
	}

	@Override
	public boolean shouldFilter() {
		RequestContext ctx = RequestContext.getCurrentContext();
		if (ctx.getRequest().getRequestURI() == null || !ctx.getRequest().getRequestURI().startsWith("/auth"))
			return false;
		return true;
	}

	@Override
	public Object run() {
		RequestContext ctx = RequestContext.getCurrentContext();
		HttpServletRequest request = ctx.getRequest();
		if (ctx != null && request != null && request.getHeader(headerName) != null) {
			ctx.addZuulRequestHeader(headerName, request.getHeader(headerName));
			/*
			 * if(jwtTokenUtil.validateToken(request.getHeader(AuthConstants.
			 * REQUEST_TOKEN_HEADER_NAME))){
			 * ctx.addZuulRequestHeader(AuthConstants.REQUEST_TOKEN_HEADER_NAME,
			 * request.getHeader(AuthConstants.REQUEST_TOKEN_HEADER_NAME)); }
			 */
		} else {
			new ErrorHandler().processValidationError(
					new AuthenticationException("invalid user, Please enter valid credentials"));
		}
		return null;
	}
}
